version: 2.1

jobs:
  setup:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Download AdGuard Home binary
          command: |
            echo "Downloading AdGuard Home binary..."
            curl -L -S -o '/tmp/AdGuardHome_linux_amd64.tar.gz' 'https://static.adguard.com/adguardhome/release/AdGuardHome_linux_amd64.tar.gz'
            tar -C /tmp/ -xzf /tmp/AdGuardHome_linux_amd64.tar.gz
            mkdir -p ./docker
            cp -r /tmp/AdGuardHome/* ./docker/
      - run:
          name: Create Dockerfile in project root
          command: |
            echo "Creating Dockerfile..."
            cat \<<EOF > Dockerfile
            FROM alpine:3.18

            WORKDIR /opt/adguardhome

            RUN apk --no-cache add ca-certificates libcap tzdata && \\
                mkdir -p /opt/adguardhome

            COPY ./docker/AdGuardHome_linux_amd64 /opt/adguardhome/AdGuardHome

            RUN chmod +x /opt/adguardhome/AdGuardHome

            EXPOSE 53/tcp 53/udp 3000

            CMD ["/opt/adguardhome/AdGuardHome"]
            EOF

  build:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image for AdGuard Home
          command: docker build -t adguardhome .

  test:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Test AdGuard Home container
          command: |
            echo "Running tests..."
            docker run --rm adguardhome --version

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Deploy AdGuard Home container
          command: |
            docker run -d --name adguardhome \
              -p 53:53/tcp \
              -p 53:53/udp \
              -p 3000:3000 \
              adguardhome

workflows:
  version: 2
  setup-build-test-deploy:
    jobs:
      - setup
      - build:
          requires:
            - setup
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
